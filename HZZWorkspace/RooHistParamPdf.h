/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
  * Create an emprical PDF from histograms, used for the interference studies
  * in the search for heavy resonances.
  * The input histograms are the discriminant spectrum in reconstruction-level
  * h_sig: signal-only
  * h_HB: interference between Heavy higgs and ggZZ background
  * h_hH: interference between Heavy higgs and the SM Higgs (125 GeV)
  * h_B:  background-only (or plus the interference of ggZZ and SM Higgs)
  * Final PDF is constructed as function of signal strength: kappa 
  * PDF = kappa*h_sig + sqrt(kappa)*h_HB + sqrt(kappa)*h_hH + h_B
 ****************************************************************************/

#ifndef ROOHISTPARAMPDF
#define ROOHISTPARAMPDF

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"

#include "TH1.h"
 
class RooHistParamPdf : public RooAbsPdf {
public:
  RooHistParamPdf() {
      _arrSize = 0;
      _bins = nullptr;
      _w_sig = nullptr;
      _w_int_HB = nullptr;
      _w_int_hH = nullptr;
      _w_Bonly = nullptr;
  } ; 

  // Include the ggZZ part as well...
  RooHistParamPdf(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _kappa,
          const TH1& h_sig,
          const TH1& h_HB,
          const TH1& h_hH,
          const TH1& h_B
          );

  RooHistParamPdf(const RooHistParamPdf& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooHistParamPdf(*this,newname); }
  virtual ~RooHistParamPdf();

  Int_t find_bin() const;

protected:

  RooRealProxy x ;
  RooRealProxy kappa ;

  Int_t _arrSize;
  Double_t* _bins; //[_arrSize]
  Double_t* _w_sig; //[_arrSize]
  Double_t* _w_int_HB; //[_arrSize]
  Double_t* _w_int_hH; //[_arrSize]
  Double_t* _w_Bonly; //[_arrSize]
  Double_t evaluate() const ;

private:

  ClassDef(RooHistParamPdf,1) // Your description goes here...
};
 
#endif
